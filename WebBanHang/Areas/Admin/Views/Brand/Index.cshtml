@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<WebBanHang.Context.Brand_0242>

@{
    ViewBag.Title = "Index";
}
<style>
    .ul.pagination {
        display: inline-block;
        padding: 0;
        margin: 0;
    }

    ul.pagination li {
        display: inline;
    }

        ul.pagination li a {
            color: black;
            float: left;
            padding: 8px 16px;
            text-decoration: none;
            transition: background-color .3s;
        }

            ul.pagination li a.active {
                background-color: #4CAF50;
                color: white;
            }

            ul.pagination li a:hover:not(.active) {
                background-color: #ddd;
            }
</style>
@using (Html.BeginForm("Index", "Brand", FormMethod.Get))
{
    <p style="margin:20px 0 20px 20px;">
        Tìm tên thương hiệu: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="tìm kiếm" />
    </p>
}

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title" style="margin-right:20px;">Tất cả thương hiệu</h3>
                        <p>
                            @Html.ActionLink("Thêm thương hiệu", "Create")
                        </p>
                        <a href="@Url.Action("Trash", "Brand")" style="text-align:right;display: flex;align-items: center;">
                            <i class="fas fa-trash" style="margin-right:2px;color:red;"></i> Thùng rác
                        </a>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body" id="bodyBrand">

                        <table class="table">
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.FirstOrDefault().Avatar)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.FirstOrDefault().ShowOnHomePage)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.FirstOrDefault().Slug)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.FirstOrDefault().DisplayOrder)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.FirstOrDefault().Deleted)
                                </th>
                                <th></th>
                            </tr>

                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                    <td>
                                        <img src="~/Content/images/brand/@item.Avatar" width="60" height="60" />
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ShowOnHomePage)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Slug)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DisplayOrder)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Deleted)
                                    </td>
                                    <td>
                                        <a href="@Url.Action("Edit", "Brand", new { id = item.Id })"
                                           style="display:inline-flex;align-items: center;padding:8px 12px;background:green;border-radius:5px;margin-left:4px;">
                                            <i class="fas fa-edit" style="margin-right:5px;font-size:20px; color:white;"></i>
                                            <span style="color:white;">Edit</span>
                                        </a>

                                        <a href="@Url.Action("Details", "Brand", new { id = item.Id })"
                                           style="display:inline-flex;align-items: center;padding:8px 12px;background:blue;border-radius:5px;margin-left:4px;">
                                            <i class="fas fa-info" style="margin-right:5px;font-size:20px; color:white;"></i>
                                            <span style="color:white;">Details</span>
                                        </a>
                                        <a href="@Url.Action("DelTrash", "Brand",new { id=item.Id })"
                                           style="display:inline-flex;align-items: center; padding:8px 12px;background:red; border-radius:5px;margin-left:4px;">
                                            <i class="fas fa-trash" style="margin-right:5px;color:white;font-size:20px;"></i>
                                            <span style="color:white;">Trash</span>
                                        </a>

                                    </td>
                                </tr>
                            }

                        </table>
                        Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                        @Html.PagedListPager(Model, page => Url.Action("Index",
                       new { page, currentFilter = ViewBag.CurrentFilter }),
                        PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "bodyBrand" })
                       )
                    </div>
                    //
                    <!-- /.card-body -->
                </div>




